{
  "name": "trufflesuite-vscode",
  "displayName": "Trufflesuite for VSCode",
  "description": "Develop, deploy and debug on the Ethereum Ecosystem from inside VSCode.",
  "publisher": "trufflesuite-csi",
  "preview": false,
  "icon": "images/TruffleLogo.png",
  "version": "2.0.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/trufflesuite/vscode-ext"
  },
  "bugs": {
    "url": "https://github.com/trufflesuite/vscode-ext/issues"
  },
  "homepage": "https://github.com/trufflesuite/vscode-ext/blob/master/README.md",
  "license": "MIT",
  "engines": {
    "vscode": "^1.60.0"
  },
  "keywords": [
    "blockchain",
    "ethereum",
    "debugger",
    "debuggers",
    "snippet",
    "truffle",
    "solidity",
    "trufflesuite",
    "ganache",
    "ganache-cli",
    "evm"
  ],
  "categories": [
    "Extension Packs",
    "Programming Languages"
  ],
  "aiKey": "INSERTAIKEY",
  "main": "./out/src/extension.js",
  "activationEvents": [
    "onView:AzureBlockchain",
    "onCommand:truffleTools.showWelcomePage",
    "onCommand:truffleTools.refresh",
    "onCommand:contract.copyByteCode",
    "onCommand:contract.copyDeployedByteCode",
    "onCommand:contract.copyABI",
    "onCommand:truffle.createLocalUI",
    "onCommand:truffle.newSolidityProject",
    "onCommand:truffleTools.buildContracts",
    "onCommand:truffleTools.deployContracts",
    "onCommand:truffleTools.connectProject",
    "onCommand:truffleTools.copyRPCEndpointAddress",
    "onCommand:truffleTools.createProject",
    "onCommand:truffleTools.disconnectProject",
    "onCommand:openZeppelin.addCategory",
    "onCommand:truffleTools.signInToInfuraAccount",
    "onCommand:truffleTools.signOutOfInfuraAccount",
    "onCommand:truffleTools.openAtAzurePortal",
    "onCommand:truffleTools.createNewBDMApplication",
    "onCommand:truffleTools.deleteBDMApplication",
    "onDebug"
  ],
  "contributes": {
    "configuration": {
      "title": "Blockchain Development Kit for Ethereum",
      "properties": {
        "truffleTools.ignoreLongRunningTaskNotification": {
          "type": "boolean",
          "default": false,
          "description": "Disable notification on long running tasks."
        },
        "truffleTools.openZeppelin.version": {
          "type": "string",
          "default": "2.5.0",
          "scope": "The latest Open Zeppelin version"
        },
        "truffleTools.storageAccount.name": {
          "type": "string",
          "scope": "Storage Account name"
        },
        "truffleTools.coreSDK": {
          "type": "string",
          "scope": "Core SDK for extensions backend",
          "default": "Truffle",
          "enum": [
            "Truffle",
            "OpenZeppelin"
          ]
        }
      }
    },
    "commands": [
      {
        "command": "truffleTools.showWelcomePage",
        "title": "Show Welcome Page",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.refresh",
        "title": "Refresh",
        "category": "Blockchain",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "contract.copyByteCode",
        "title": "Copy Constructor Bytecode",
        "category": "Blockchain"
      },
      {
        "command": "contract.copyDeployedByteCode",
        "title": "Copy Transaction Bytecode",
        "category": "Blockchain"
      },
      {
        "command": "contract.copyABI",
        "title": "Copy Contract ABI",
        "category": "Blockchain"
      },
      {
        "command": "truffle.newSolidityProject",
        "title": "New Solidity Project",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.buildContracts",
        "title": "Build Contracts",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.deployContracts",
        "title": "Deploy Contracts",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.connectProject",
        "title": "Connect to network",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.copyRPCEndpointAddress",
        "title": "Copy RPC Endpoint Address",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.createProject",
        "title": "Create a new network",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.disconnectProject",
        "title": "Disconnect",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.startGanacheServer",
        "title": "Start Ganache Server",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.stopGanacheServer",
        "title": "Stop Ganache Server",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.signInToInfuraAccount",
        "title": "Sign in to Infura account",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.signOutOfInfuraAccount",
        "title": "Sign out of Infura account",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.getPrivateKey",
        "title": "Retrieve private key",
        "category": "Blockchain"
      },
      {
        "command": "openZeppelin.addCategory",
        "title": "Add contracts from OpenZeppelin",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.openAtAzurePortal",
        "title": "Open at Azure Portal",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.createNewBDMApplication",
        "title": "Create Blockchain Application",
        "category": "Blockchain"
      },
      {
        "command": "truffleTools.deleteBDMApplication",
        "title": "Delete Blockchain Application",
        "category": "Blockchain"
      }
    ],
    "breakpoints": [
      {
        "language": "solidity"
      },
      {
        "language": "sol"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "when": "false",
          "command": "truffleTools.refresh"
        },
        {
          "when": "false",
          "command": "truffleTools.copyRPCEndpointAddress"
        },
        {
          "when": "false",
          "command": "truffleTools.disconnectProject"
        },
        {
          "when": "false",
          "command": "contract.copyByteCode"
        },
        {
          "when": "false",
          "command": "contract.copyDeployedByteCode"
        },
        {
          "when": "false",
          "command": "contract.copyABI"
        },
        {
          "when": "truffleTools:isWorkspaceOpen",
          "command": "truffleTools.buildContracts"
        },
        {
          "when": "truffleTools:isWorkspaceOpen",
          "command": "truffleTools.deployContracts"
        },
        {
          "when": "false",
          "command": "openZeppelin.addCategory"
        },
        {
          "when": "false",
          "command": "truffleTools.openAtAzurePortal"
        },
        {
          "when": "false",
          "command": "truffleTools.deleteBDMApplication"
        },
        {
          "when": "false",
          "command": "truffleTools.createNewBDMApplication"
        }
      ],
      "view/title": [
        {
          "command": "truffleTools.showWelcomePage",
          "when": "view == AzureBlockchain"
        },
        {
          "command": "truffleTools.createProject",
          "when": "view == AzureBlockchain"
        },
        {
          "command": "truffleTools.connectProject",
          "when": "view == AzureBlockchain"
        },
        {
          "command": "truffleTools.refresh",
          "when": "view == AzureBlockchain",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "truffleTools.disconnectProject",
          "when": "view == AzureBlockchain && viewItem == project",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "truffleTools.startGanacheServer",
          "when": "view == AzureBlockchain && viewItem == localproject",
          "group": "azureBlockchain-1@0"
        },
        {
          "command": "truffleTools.stopGanacheServer",
          "when": "view == AzureBlockchain && viewItem == localproject",
          "group": "azureBlockchain-1@1"
        },
        {
          "command": "truffleTools.disconnectProject",
          "when": "view == AzureBlockchain && viewItem == localproject",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "truffleTools.disconnectProject",
          "when": "view == AzureBlockchain && viewItem == bdmproject",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "truffleTools.copyRPCEndpointAddress",
          "when": "view == AzureBlockchain && viewItem == network",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "truffleTools.copyRPCEndpointAddress",
          "when": "view == AzureBlockchain && viewItem == localnetwork",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "truffleTools.openAtAzurePortal",
          "when": "view == AzureBlockchain && viewItem == input",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "truffleTools.openAtAzurePortal",
          "when": "view == AzureBlockchain && viewItem == output",
          "group": "azureBlockchain-0@0"
        },
        {
          "command": "truffleTools.createNewBDMApplication",
          "when": "view == AzureBlockchain && viewItem == bdmproject",
          "group": "azureBlockchain-1@1"
        },
        {
          "command": "truffleTools.deleteBDMApplication",
          "when": "view == AzureBlockchain && viewItem == bdmApplication",
          "group": "azureBlockchain-0@0"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == solidity",
          "command": "truffleTools.buildContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "truffleTools.deployContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "truffleTools.deployContracts",
          "group": "8_buildContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "contract.copyByteCode",
          "group": "9_copyFromContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "contract.copyDeployedByteCode",
          "group": "9_copyFromContractGroup"
        },
        {
          "when": "resourceLangId == json",
          "command": "contract.copyABI",
          "group": "9_copyFromContractGroup"
        },
        {
          "when": "resourceLangId == solidity",
          "command": "openZeppelin.addCategory",
          "group": "8_buildContractGroup"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "AzureBlockchain",
          "name": "Blockchain Networks"
        }
      ],
      "debug": [
        {
          "id": "InstructionView",
          "name": "Instructions"
        }
      ]
    },
    "debuggers": [
      {
        "type": "truffle",
        "label": "Truffle Debugger",
        "program": "./out/src/debugger.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [],
            "properties": {
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": true
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              },
              "txHash": {
                "type": "string",
                "description": "Transaction hash to debug",
                "default": "0x"
              },
              "files": {
                "type": "string[]",
                "description": "Array of file paths of solidity files to debug",
                "default": []
              },
              "workingDirectory": {
                "type": "string",
                "description": "Directory of truffle box",
                "default": "${workspaceFolder}"
              },
              "providerUrl": {
                "type": "string",
                "description": "URL of provider",
                "default": "http://127.0.0.1:8545"
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "truffle",
            "request": "launch",
            "name": "Debug Transaction with Truffle",
            "stopOnEntry": false,
            "txHash": "0x",
            "files": [],
            "workingDirectory": "${workspaceFolder}",
            "providerUrl": "http://127.0.0.1:8545"
          }
        ],
        "configurationSnippets": [
          {
            "label": "Truffle Debugger: Launch",
            "description": "Runs the Truffle debugger (truffle) and attaches to a TestRPC instance",
            "body": {
              "type": "truffle",
              "request": "launch",
              "name": "Debug Transaction with Truffle",
              "stopOnEntry": false,
              "txHash": "0x",
              "files": [],
              "workingDirectory": "^\"\\${workspaceFolder}/",
              "providerUrl": "http://127.0.0.1:8545"
            }
          }
        ],
        "variables": {}
      }
    ]
  },
  "scripts": {
    "package": "npx vsce package",
    "publish": "npx vsce publish",
    "vscode:prepublish": "npm i && npm run webpack:prod",
    "compile": "npm run clean && tsc -p ./",
    "webpack:prod": "webpack --mode production",
    "watch": "tsc -watch -p ./",
    "prettier:fix": "prettier --write .",
    "eslint": "eslint -c .eslintrc.js --ext .ts src/**/*.ts test/**/*.ts",
    "version": "tsc -v",
    "test": "npm run compile && node ./out/test/runTest",
    "clean": "npx rimraf -- ./out/*"
  },
  "devDependencies": {
    "@types/download": "^6.2.4",
    "@types/estree": "^0.0.39",
    "@types/fs-extra": "^7.0.0",
    "@types/glob": "^7.1.1",
    "@types/hdkey": "^0.7.0",
    "@types/istanbul": "^0.4.30",
    "@types/mocha": "^5.2.7",
    "@types/node": "^10.12.21",
    "@types/request": "^2.48.1",
    "@types/request-promise": "^4.1.44",
    "@types/rewire": "^2.5.28",
    "@types/semver": "^6.0.0",
    "@types/sinon": "^7.0.11",
    "@types/source-map": "^0.5.2",
    "@types/uuid": "^3.4.4",
    "@types/vscode": "1.39.0",
    "@typescript-eslint/eslint-plugin": "^5.3.1",
    "@typescript-eslint/parser": "^5.3.1",
    "copy-webpack-plugin": "5.1.1",
    "decache": "^4.5.1",
    "eslint": "^8.2.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-jsdoc": "^37.0.3",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^4.0.0",
    "glob": "^7.1.4",
    "husky": "^2.4.0",
    "istanbul": "^0.4.5",
    "lint-staged": "^8.2.0",
    "mocha": "^6.2.0",
    "prettier": "2.4.1",
    "remap-istanbul": "^0.13.0",
    "rewire": "^4.0.1",
    "sinon": "^7.3.2",
    "truffle": "^5.0.14",
    "ts-loader": "7.0.2",
    "typescript": "3.8.3",
    "vscode-debugadapter": "^1.33.0",
    "vscode-debugprotocol": "^1.33.0",
    "vscode-test": "^1.2.0",
    "webpack": "4.43.0",
    "webpack-cli": "3.3.11"
  },
  "dependencies": {
    "@truffle/debug-utils": "1.0.19",
    "@truffle/debugger": "5.0.35",
    "@truffle/provider": "0.2.1",
    "abi-decoder": "^2.0.1",
    "acorn": "^6.1.1",
    "acorn-walk": "^6.1.1",
    "astring": "^1.7.5",
    "azure-arm-resource": "^7.3.0",
    "bip39": "^3.0.1",
    "download": "^7.1.0",
    "fs-extra": "^7.0.1",
    "hdkey": "^1.1.1",
    "ms-rest": "^2.5.0",
    "ms-rest-azure": "^2.6.0",
    "open": "^6.4.0",
    "request": "^2.88.0",
    "request-promise": "^4.2.4",
    "semver": "^6.0.0",
    "solidity-parser-antlr": "^0.4.11",
    "uuid": "^3.3.2",
    "vscode-azureextensionui": "^0.29.12",
    "vscode-extension-telemetry": "^0.1.1"
  },
  "extensionDependencies": [
    "JuanBlanco.solidity",
    "ms-vscode.azure-account"
  ],
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run compile"
    }
  },
  "lint-staged": {
    "*.ts": [
      "eslint",
      "prettier --write",
      "git add"
    ]
  }
}
